name: Tests

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x]
    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
      redis:
        image: redis:7
        ports:
          - 6379:6379
      upstash:
        image: hiett/serverless-redis-http:latest
        ports:
          - 8079:80
        env:
          SRH_MODE: env
          SRH_TOKEN: example_token
          SRH_CONNECTION_STRING: "redis://redis:6379"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm db:migrate
        env:
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/postgres
      - name: Run unit tests
        run: pnpm test:unit:coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x]
        shardIndex: [1, 2, 3]
        shardTotal: [3]
    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
      redis:
        image: redis:7
        ports:
          - 6379:6379
      upstash:
        image: hiett/serverless-redis-http:latest
        ports:
          - 8079:80
        env:
          SRH_MODE: env
          SRH_TOKEN: example_token
          SRH_CONNECTION_STRING: "redis://redis:6379"
    env:
      MCP_ROUTER_SERVER_URL: https://router.mcprouter.app/sse
      MCP_ROUTER_SERVER_API_KEY: ${{ secrets.MCP_ROUTER_SERVER_API_KEY }}
      QSTASH_TOKEN: eyJVc2VySUQiOiJkZWZhdWx0VXNlciIsIlBhc3N3b3JkIjoiZGVmYXVsdFBhc3N3b3JkIn0
      QSTASH_URL: http://localhost:8080
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      AZURE_API_KEY: ${{ secrets.AZURE_API_KEY }}
      AZURE_RESOURCE_NAME: ${{ secrets.AZURE_RESOURCE_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm db:migrate
        env:
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/postgres
      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps
      - name: Run QStash
        run: |
          npx @upstash/qstash-cli dev &
          until nc -z localhost 8080; do
            echo 'Waiting for QStash...'
            sleep 1
          done
      - name: Run e2e tests
        run: pnpm test -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

  merge-reports:
    # Merge reports after test, even if some shards have failed
    if: ${{ !cancelled() }}
    needs: [e2e]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 1
