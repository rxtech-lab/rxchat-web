name: Unit Tests

on: push

concurrency:
  group: ${{ github.ref != 'refs/heads/main' && format('{0}-{1}', github.workflow, github.ref) || '' }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        node-version: [22.x]
    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
      redis:
        image: redis:7
        ports:
          - 6379:6379
    env:
      MCP_ROUTER_SERVER_URL: https://router.mcprouter.app/sse
      MCP_ROUTER_SERVER_API_KEY: ${{ secrets.MCP_ROUTER_SERVER_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm db:migrate
        env:
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/postgres
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run unit tests
        run: pnpm test:unit
      - name: Run e2e tests
        run: pnpm test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 1
